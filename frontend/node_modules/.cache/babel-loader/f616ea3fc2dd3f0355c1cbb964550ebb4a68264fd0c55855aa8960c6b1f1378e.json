{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport apiService from '../services/api';\nexport const useRecipes = () => {\n  _s();\n  const [recipes, setRecipes] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const searchRecipes = React.useCallback(async (ingredients, limit = 10) => {\n    if (!ingredients || ingredients.length === 0) {\n      setError('Please add at least one ingredient before searching!');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await apiService.searchRecipes(ingredients, limit);\n      if (response.success) {\n        setRecipes(response.data);\n      } else {\n        setError(response.message || 'Failed to search recipes');\n      }\n    } catch (err) {\n      console.error('Error searching recipes:', err);\n      setError(err.message || 'Sorry, there was an error finding recipes. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const getAllRecipes = React.useCallback(async (filters = {}) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await apiService.getAllRecipes(filters);\n      if (response.success) {\n        setRecipes(response.data);\n      } else {\n        setError(response.message || 'Failed to fetch recipes');\n      }\n    } catch (err) {\n      console.error('Error fetching recipes:', err);\n      setError(err.message || 'Sorry, there was an error loading recipes. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const clearRecipes = React.useCallback(() => {\n    setRecipes([]);\n    setError(null);\n  }, []);\n  const getRecipeById = React.useCallback(async id => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await apiService.getRecipeById(id);\n      if (response.success) {\n        return response.data;\n      } else {\n        throw new Error(response.message || 'Recipe not found');\n      }\n    } catch (err) {\n      console.error('Error fetching recipe:', err);\n      setError(err.message || 'Sorry, there was an error loading the recipe.');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return {\n    recipes,\n    loading,\n    error,\n    searchRecipes,\n    getAllRecipes,\n    clearRecipes,\n    getRecipeById,\n    hasRecipes: recipes.length > 0\n  };\n};\n_s(useRecipes, \"qROBI3M4rZzmKeiX4k9R8QEeKUg=\");","map":{"version":3,"names":["React","apiService","useRecipes","_s","recipes","setRecipes","useState","loading","setLoading","error","setError","searchRecipes","useCallback","ingredients","limit","length","response","success","data","message","err","console","getAllRecipes","filters","clearRecipes","getRecipeById","id","Error","hasRecipes"],"sources":["/Users/kevin/InstaDish/frontend/src/hooks/useRecipes.js"],"sourcesContent":["import React from 'react';\nimport apiService from '../services/api';\n\nexport const useRecipes = () => {\n  const [recipes, setRecipes] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  const searchRecipes = React.useCallback(async (ingredients, limit = 10) => {\n    if (!ingredients || ingredients.length === 0) {\n      setError('Please add at least one ingredient before searching!');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await apiService.searchRecipes(ingredients, limit);\n      \n      if (response.success) {\n        setRecipes(response.data);\n      } else {\n        setError(response.message || 'Failed to search recipes');\n      }\n    } catch (err) {\n      console.error('Error searching recipes:', err);\n      setError(err.message || 'Sorry, there was an error finding recipes. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const getAllRecipes = React.useCallback(async (filters = {}) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await apiService.getAllRecipes(filters);\n      \n      if (response.success) {\n        setRecipes(response.data);\n      } else {\n        setError(response.message || 'Failed to fetch recipes');\n      }\n    } catch (err) {\n      console.error('Error fetching recipes:', err);\n      setError(err.message || 'Sorry, there was an error loading recipes. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const clearRecipes = React.useCallback(() => {\n    setRecipes([]);\n    setError(null);\n  }, []);\n\n  const getRecipeById = React.useCallback(async (id) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await apiService.getRecipeById(id);\n      \n      if (response.success) {\n        return response.data;\n      } else {\n        throw new Error(response.message || 'Recipe not found');\n      }\n    } catch (err) {\n      console.error('Error fetching recipe:', err);\n      setError(err.message || 'Sorry, there was an error loading the recipe.');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return {\n    recipes,\n    loading,\n    error,\n    searchRecipes,\n    getAllRecipes,\n    clearRecipes,\n    getRecipeById,\n    hasRecipes: recipes.length > 0\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}